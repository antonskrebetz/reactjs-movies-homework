{"version":3,"sources":["components/header/styles.js","components/mui-theme/dark-theme.js","services/http-service.js","redux/appSlice.js","i18n/i18n.js","components/header/header.jsx","components/header/use-header.js","components/pagination/styles.js","components/pagination/pagination.jsx","services/media-service.js","components/movie-card/styles.js","components/movie-card/movie-card.jsx","components/movie-list/movie-list.jsx","components/toggle-buttons/styles.js","components/toggle-buttons/toggle-buttons.jsx","components/error-message/error.gif","components/error-message/error-message.jsx","components/error-boundary/error-boundary.jsx","components/spinner/styles.js","components/spinner/spinner.js","redux/popularMoviesSlice.js","services/use-lang.js","components/pages/popular-movies/popular-movies.jsx","components/pages/popular-movies/use-popular-movies.js","redux/topMoviesSlice.js","components/pages/toprated-movies/toprated-movies.jsx","components/pages/toprated-movies/use-toprated-movies.js","redux/upcomingMoviesSlice.js","components/pages/upcoming-movies/upcoming-movies.jsx","components/pages/upcoming-movies/use-upcoming-movies.js","redux/actorSlice.js","components/pages/actor-page/actor-page.jsx","components/pages/actor-page/use-actor-page.js","components/actor-card/styles.js","components/actor-card/actor-card.jsx","components/actor-list/actor-list.jsx","redux/movieSlice.js","components/pages/movie-page/movie-page.jsx","components/pages/movie-page/use-movie-page.js","redux/searchSlice.js","components/pages/search-page/search-page.jsx","components/pages/search-page/use-search-page.js","components/pages/404/404.png","components/pages/404/404.jsx","components/app/app.jsx","reportWebVitals.js","redux/store.js","index.js"],"names":["Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","color","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","styles","bar","background","search","xs","box","md","DarkTheme","createTheme","mode","httpService","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","_apiBase","_apiKey","fetchMovieGenres","createAsyncThunk","lang","appSlice","createSlice","name","initialState","query","genresStatus","genresError","movieGenres","reducers","changeLanguage","state","action","payload","value","changeSearchText","text","extraReducers","pending","fulfilled","genres","rejected","actions","reducer","i18n","use","initReactI18next","init","resources","en","translation","inputPlaceholder","toggleBtnsPopMovies","toggleBtnsTopMovies","toggleBtnsUpMovies","searchResl","actor","birth","place","bio","photos","known","movie","title","overview","release","revenue","duration","showAllCast","hideAllCast","cast","images","recommend","ru","lng","fallbackLng","interpolation","escapeValue","Header","useState","searchText","setSearchText","dispatch","useDispatch","useSelector","appReducer","navigate","useNavigate","useEffect","handleChangeLang","e","target","hadleChangeInput","submitSearchForm","key","useHeader","t","useTranslation","ThemeProvider","AppBar","sx","Container","maxWidth","Toolbar","to","className","Box","flexGrow","placeholder","inputProps","onChange","onKeyDown","FormControl","fullWidth","Select","id","size","MenuItem","pagination","marginBottom","BasicPagination","actualPage","countPages","useLocation","handlePageChange","useCallback","page","pathname","window","scroll","Pagination","count","hideNextButton","hidePrevButton","textContent","img_300","notfound_300","card","chip","zIndex","MovieCard","vote","alt","poster","movieRate","useMemo","Card","component","Link","onClick","Chip","label","toFixed","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","variant","join","MovieList","map","el","vote_average","poster_path","genre_ids","item","find","genre","togglebtns","margin","sm","ToggleButtons","alignment","setAlignment","ToggleButtonGroup","exclusive","event","newAlignment","ToggleButton","ErrorMessage","src","img","ErrorBoundary","error","errorInfo","this","setState","props","children","Component","spinner","Spinner","SpinnerCircularFixed","style","fetchPopularMovies","popularMovies","totalPages","results","total_pages","useLang","PopularMovies","useSearchParams","searchParams","popularReducer","movies","usePopularMovies","get","fetchTopMovies","topMovies","TopRatedMovies","topReducer","useTopratedMovies","fetchUpcomingMovies","upcomingMovies","UpcomingMovies","upcomingReducer","useUpcomingMovies","fetchPerson","fetchActorImages","fetchActorMovies","personStatus","personError","personData","imagesStatus","imagesError","actorImages","moviesStatus","moviesError","actorMovies","profiles","slice","ActorPage","actorReducer","useActorPage","useParams","actorId","file_path","nanoid","PageContent","profile_path","birthday","place_of_birth","biography","content","ActorCard","character","ActorList","fetchMovie","fetchMovieImages","fetchMovieCast","fetchMovieRecommend","movieSlice","movieStatus","movieError","movieData","movieImages","castStatus","castError","movieCast","isShortListCast","shortListCast","recommendStatus","recommendError","movieRecommend","toggleCastList","backdrops","MoviePage","movieReducer","togglelCastItems","useMoviePage","movieId","movieDuration","Math","floor","runtime","release_date","budget","Button","i","fetchSearchMovies","searchMovies","SearchPage","queryText","queryPage","searchReducer","useSearchPage","length","Page404","img404","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","fallback","document","getElementById"],"mappings":"2aAGaA,EAASC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,oBAClCC,SAAU,WACVC,aAAcF,EAAMG,MAAMD,aAC1BE,gBAAiBC,YAAML,EAAMM,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,gBAAiBC,YAAML,EAAMM,QAAQC,OAAOC,MAAO,MAErDC,MAAO,OACPC,YAAaV,EAAMW,QAAQ,GAC3BC,WAAY,EACZC,MAAO,QACNb,EAAMc,YAAYC,GAAG,MAAQ,CAC5BH,WAAYZ,EAAMW,QAAQ,GAC1BE,MAAO,YAIEG,EAAoBjB,YAAO,MAAPA,EAAc,kBAAgB,CAC7DkB,QAD6C,EAAGjB,MACjCW,QAAQ,EAAG,GAC1BF,MAAO,UACPS,OAAQ,OACRjB,SAAU,WACVkB,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,aAGLC,EAAkBxB,YAAOyB,IAAPzB,EAAkB,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CAC/DS,MAAO,UACP,wBAAwB,aACtBQ,QAASjB,EAAMW,QAAQ,EAAG,EAAG,EAAG,GAChCc,YAAY,cAAD,OAAgBzB,EAAMW,QAAQ,GAA9B,KACXe,WAAY1B,EAAM2B,YAAYC,OAAO,SACrCf,MAAO,QACNb,EAAMc,YAAYC,GAAG,MAAQ,CAC5BF,MAAO,aAKAgB,EAAS,CACpBC,IAAK,CACHC,WAAY,WAEdC,OAAQ,CACNpB,WAAY,OACZQ,QAAS,CAAEa,GAAI,SAEjBC,IAAK,CACHd,QAAS,CAAEa,GAAI,OAAQE,GAAI,U,0FC7ChBC,EANGC,YAAY,CAC5B/B,QAAS,CACPgC,KAAM,U,iDCJGC,EAAc,WAEzB,IAAMC,EAAO,uCAAG,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,CAAC,eAAgB,oBAApE,kBAEWC,MAAML,EAAK,CAACE,SAAQC,OAAMC,YAFrC,WAENE,EAFM,QAGEC,GAHF,sBAIF,IAAIC,MAAJ,0BAA6BR,EAA7B,qBAA6CM,EAASG,SAJpD,wBAOOH,EAASI,OAPhB,eAONC,EAPM,yBAQLA,GARK,uGAAH,sDAcb,MAAO,CAACZ,YAGGa,EAAW,gCACXC,EAAU,2CCjBVC,EAAmBC,YAC9B,wBACA,YAAa,IAAXC,EAAU,EAAVA,KAEA,OAAOjB,EADWD,IAAXC,SACQ,GAAD,OAAIa,EAAJ,4BAAgCC,EAAhC,qBAAoDG,OAYhEC,EAAWC,YAAY,CAC3BC,KAAM,MACNC,aAVmB,CACnBJ,KAAM,KACNK,MAAO,SACPC,aAAc,KACdC,YAAa,KACbC,YAAa,IAMbC,SAAU,CACRC,eADQ,SACOC,EAAOC,GACpBD,EAAMX,KAAOY,EAAOC,QAAQC,OAE9BC,iBAJQ,SAISJ,EAAOC,GACtBD,EAAMN,MAAQO,EAAOC,QAAQG,OAGjCC,eAAa,mBACVnB,EAAiBoB,SAAU,SAACP,GAC3BA,EAAML,aAAe,UACrBK,EAAMJ,YAAc,QAHX,cAKVT,EAAiBqB,WAAY,SAACR,EAAOC,GACpCD,EAAML,aAAe,WACrBK,EAAMH,YAAcI,EAAOC,QAAQO,UAP1B,cASVtB,EAAiBuB,UAAW,SAACV,EAAOC,GACnCD,EAAML,aAAe,WACrBK,EAAMJ,YAAcK,EAAOC,WAXlB,KAgBRS,EAAoBrB,EAApBqB,QACQC,EADYtB,EAAXsB,QAGdb,EAEEY,EAFFZ,eACAK,EACEO,EADFP,iB,gBCMFS,IACGC,IAAIC,KACJC,KAAK,CACJC,UAAW,CACTC,GAAI,CAACC,YAzDY,CACrBC,iBAAkB,eAClBC,oBAAqB,UACrBC,oBAAqB,YACrBC,mBAAoB,WACpBC,WAAY,iBACZC,MAAO,CACLC,MAAO,YACPC,MAAO,kBACPC,IAAK,aACLC,OAAQ,SACRC,MAAO,YAETC,MAAO,CACLC,MAAO,SACPC,SAAU,YACVC,QAAS,gBACTC,QAAS,WACTC,SAAU,YACVC,YAAa,WACbC,YAAa,WACbC,KAAM,kBACNC,OAAQ,SACRC,UAAW,qBAmCTC,GAAI,CAACvB,YAhCY,CACrBC,iBAAkB,4EAClBC,oBAAqB,+DACrBC,oBAAqB,6CACrBC,mBAAoB,yDACpBC,WAAY,oGACZC,MAAO,CACLC,MAAO,6EACPC,MAAO,mFACPC,IAAK,0DACLC,OAAQ,+DACRC,MAAO,8EAETC,MAAO,CACLC,MAAO,oDACPC,SAAU,oDACVC,QAAS,iEACTC,QAAS,wCACTC,SAAU,0GACVC,YAAa,4EACbC,YAAa,gEACbC,KAAM,oGACNC,OAAQ,sEACRC,UAAW,+EAWXE,IAAK,KACLC,YAAa,KACbC,cAAe,CAACC,aAAa,KAGlBjC,QAAf,E,yBCbekC,EA9CA,WACb,MCFuB,WACvB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAWC,cACX/D,EAAOgE,aAAY,SAAArD,GAAK,OAAIA,EAAMsD,WAAWjE,QAC/CkE,EAAWC,cAuBf,OAJAC,qBAAU,WACRN,EAAShE,EAAiB,CAACE,YAC1B,CAAC8D,EAAU9D,IAEP,CAAC4D,aAAYC,gBAAe7D,OAAMqE,iBArBhB,SAACC,GACxBR,EAASpD,EAAe,CAACI,MAAOwD,EAAEC,OAAOzD,SACzCU,EAAKd,eAAe4D,EAAEC,OAAOzD,QAmB4B0D,iBAhBlC,SAACF,GACxBT,EAAeS,EAAEC,OAAOzD,QAemD2D,iBAZpD,SAACH,GACV,UAAVA,EAAEI,MACJZ,EAAS/C,EAAiB,CAACC,KAAM4C,KACjCM,EAAS,iBAAD,OAAkBN,IAC1BC,EAAc,ODjB+Dc,GAA1Ef,EAAP,EAAOA,WAAY5D,EAAnB,EAAmBA,KAAMqE,EAAzB,EAAyBA,iBAAkBG,EAA3C,EAA2CA,iBAAkBC,EAA7D,EAA6DA,iBACrDG,EAAMC,cAAND,EAER,OACE,cAACE,EAAA,EAAD,CAAevI,MAAOoC,EAAtB,SACE,cAACoG,EAAA,EAAD,CAAQvI,SAAS,SAASwI,GAAI5G,EAAOC,IAArC,SACE,cAAC4G,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,cAAvB,uBAGA,cAACC,EAAA,EAAD,CAAKN,GAAI,CAACO,SAAU,KACpB,eAAClJ,EAAD,CAAQ2I,GAAI5G,EAAOG,OAAnB,UACE,cAAChB,EAAD,UACE,cAAC,IAAD,MAEF,cAACO,EAAD,CACE0H,YAAaZ,EAAE,oBACfa,WAAY,CAAE,aAAc,UAC5B3E,MAAO8C,EACP8B,SAAUlB,EACVmB,UAAWlB,OAGf,cAACa,EAAA,EAAD,CAAKN,GAAI5G,EAAOK,IAAhB,SACE,cAACmH,EAAA,EAAD,CAAaC,WAAS,EAAtB,SACE,eAACC,EAAA,EAAD,CACEC,GAAG,qBACHC,KAAM,QACNhJ,MAAO,UACP8D,MAAOd,EACP0F,SAAUrB,EALZ,UAOE,cAAC4B,EAAA,EAAD,CAAUnF,MAAM,KAAhB,gBACA,cAACmF,EAAA,EAAD,CAAUnF,MAAM,KAAhB,iC,SEpCH1C,EARA,CACb8H,WAAY,CACVC,aAAc,OACdxI,QAAS,OACTE,eAAgB,WC+BLuI,EA7BS,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,WAAYhG,EAA4B,EAA5BA,MAA4B,IAArBiG,kBAAqB,MAAR,GAAQ,EAE5DtH,EAAMuH,cACNrC,EAAWC,cAETqC,EAAmBC,uBAAY,SAACC,GAElCxC,EADE7D,EACO,GAAD,OAAIrB,EAAI2H,SAAR,kBAA0BtG,EAA1B,iBAAwCqG,GAEvC,GAAD,OAAI1H,EAAI2H,SAAR,iBAAyBD,IAEnCE,OAAOC,OAAO,EAAG,KAChB,CAAC3C,EAAU7D,EAAOrB,EAAI2H,WAEzB,OACE,cAAC7B,EAAA,EAAD,CAAevI,MAAOoC,EAAtB,SACE,cAACmI,EAAA,EAAD,CACEJ,MAAOL,GAhBQ,EAiBfU,MAAOT,EACPtJ,MAAM,UACNgK,gBAAc,EACdC,gBAAc,EACdjC,GAAI5G,EAAO8H,WACXR,SAAU,SAAApB,GAAC,OAAIkC,EAAiBlC,EAAEC,OAAO2C,mB,2DC7BpCC,GAAU,kCACVC,GAAe,8ECYbhJ,GAbA,CACbiJ,KAAM,CACJnC,SAAU,QACV1I,SAAU,WACVG,gBAAiB,WAEnB2K,KAAM,CACJ9K,SAAU,WACV+K,OAAQ,IACR9K,aAAc,ICHH,SAAS+K,GAAT,GAA4D,IAAxCzB,EAAuC,EAAvCA,GAAI0B,EAAmC,EAAnCA,KAAM9E,EAA6B,EAA7BA,MAAO+E,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,OAAQvG,EAAS,EAATA,OAEzDwG,EAAYC,mBAAQ,WACxB,OAAIJ,GAAQ,EAAU,UAClBA,EAAO,EAAU,UACd,UACN,CAACA,IAMJ,OACE,eAACK,EAAA,EAAD,CAAM9C,GAAI5G,GAAOiJ,KAAeU,UAAWC,IAAM5C,GAAE,iBAAYW,GAAMkC,QAL9C,WACvBrB,OAAOC,OAAO,EAAG,IAIjB,UACE,cAACqB,GAAA,EAAD,CACEC,MAAOV,EAAKW,QAAQ,GACpBpL,MAAO4K,EACP5C,GAAI5G,GAAOkJ,OAEb,eAACe,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEP,UAAU,MACVtK,OAAO,MACP8K,MAAOZ,EAAM,UAAMR,IAAN,OAAgBQ,GAAWP,GACxCM,IAAKA,IAEP,eAACc,GAAA,EAAD,CAAaxD,GAAI,CAAChI,MAAO,WAAzB,UACE,cAACyL,GAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKZ,UAAU,MAAhD,SACGpF,IAEH,cAAC8F,GAAA,EAAD,CAAYE,QAAQ,QAAQ3L,MAAM,OAAlC,SACGoE,EAAOwH,KAAK,eAlBO7C,G,6BCMjB8C,GArBG,SAAC,GAAY,IAAXlJ,EAAU,EAAVA,KACZa,EAAcwD,aAAY,SAAArD,GAAK,OAAIA,EAAMsD,WAAWzD,eAE1D,OACE,qBAAK6E,UAAU,SAAf,SAEI1F,EAAKmJ,KAAI,SAAAC,GAAE,OACT,cAACvB,GAAD,CAEEzB,GAAIgD,EAAGhD,GACP0B,KAAMsB,EAAGC,aACTrG,MAAOoG,EAAGpG,MACV+E,IAAKqB,EAAGpG,MACRgF,OAAQoB,EAAGE,YACX7H,OAAQ2H,EAAGG,UAAUJ,KAAI,SAACK,GAAD,OAAU3I,EAAY4I,MAAK,SAACC,GAAD,OAAWA,EAAMtD,KAAOoD,KAAMhJ,SAN7E4I,EAAGhD,U,oBCJL3H,GARA,CACbkL,WAAY,CACVC,OAAQ,SACR5L,QAAS,OACTE,eAAgB,CAACW,GAAI,SAAUgL,GAAI,SCgCxBC,GA5BO,WACpB,IAAMzK,EAAMuH,cACJ3B,EAAMC,cAAND,EACR,EAAkCjB,mBAAS3E,EAAI2H,UAA/C,mBAAO+C,EAAP,KAAkBC,EAAlB,KAOA,OACE,cAAC7E,EAAA,EAAD,CAAevI,MAAOoC,EAAtB,SACE,eAACiL,GAAA,EAAD,CACE5E,GAAI5G,GAAOkL,WACXtD,KAAK,QACLhJ,MAAM,UACN8D,MAAO4I,EACPG,WAAS,EACTnE,SAbe,SAACoE,EAAOC,GAC3BJ,EAAaI,IAMX,UAQE,cAACC,GAAA,EAAD,CAAclJ,MAAM,IAAIiH,UAAWC,IAAM5C,GAAG,IAA5C,SAAiDR,EAAE,yBACnD,cAACoF,GAAA,EAAD,CAAclJ,MAAM,YAAYiH,UAAWC,IAAM5C,GAAG,YAApD,SAAiER,EAAE,yBACnE,cAACoF,GAAA,EAAD,CAAclJ,MAAM,YAAYiH,UAAWC,IAAM5C,GAAG,YAApD,SAAiER,EAAE,8B,sCC9B5D,OAA0B,kCCS1BqF,I,OANM,WACnB,OACE,qBAAK5E,UAAU,YAAY6E,IAAKC,GAAKzC,IAAI,YCFxB0C,G,+MACnBzJ,MAAQ,CACN0J,OAAO,G,wDAGT,SAAkBA,EAAOC,GACvBC,KAAKC,SAAS,CACZH,OAAO,M,oBAIX,WACE,OAAIE,KAAK5J,MAAM0J,MACN,cAAC,GAAD,IAGFE,KAAKE,MAAMC,a,GAhBqBC,a,UCI5BvM,GAPA,CACbwM,QAAS,CACPjN,QAAS,QACT4L,OAAQ,cCMGsB,GANC,WACd,OACE,cAACC,GAAA,EAAD,CAAsBC,MAAO3M,GAAOwM,WCF3BI,GAAqBjL,YAChC,8BACA,YAAmB,IAAjBC,EAAgB,EAAhBA,KAAM0G,EAAU,EAAVA,KAEN,OAAO3H,EADWD,IAAXC,SACQ,GAAD,OAAIa,EAAJ,yBAA6BC,EAA7B,qBAAiDG,EAAjD,iBAA8D0G,OAiCjEnF,GAtBMrB,YAAY,CAC/BC,KAAM,UACNC,aATmB,CACnB6K,cAAe,GACfC,WAAY,GACZzL,OAAQ,KACR4K,MAAO,MAMP5J,SAAU,GACVQ,eAAa,qBACV+J,GAAmB9J,SAAU,SAACP,GAC7BA,EAAMlB,OAAS,UACfkB,EAAM0J,MAAQ,QAHL,eAKVW,GAAmB7J,WAAY,SAACR,EAAOC,GACtCD,EAAMlB,OAAS,WACfkB,EAAMsK,cAAgBrK,EAAOC,QAAQsK,QACrCxK,EAAMuK,WAAatK,EAAOC,QAAQuK,eARzB,eAUVJ,GAAmB3J,UAAW,SAACV,EAAOC,GACrCD,EAAMlB,OAAS,WACfkB,EAAM0J,MAAQzJ,EAAOC,WAZZ,MAiBRU,QCrCM8J,GAAU,WAErB,MAAO,CAACrL,KADKgE,aAAY,SAAArD,GAAK,OAAIA,EAAMsD,WAAWjE,UCoBtCsL,GAfO,WACpB,MAAqBC,cAAhBC,EAAL,oBACA,ECL8B,SAAC9E,GAC/B,IAAM5C,EAAWC,cACV/D,EAAQqL,KAARrL,KACAP,EAAUuE,aAAY,SAAArD,GAAK,OAAIA,EAAM8K,kBAArChM,OACDyL,EAAalH,aAAY,SAAArD,GAAK,OAAIA,EAAM8K,eAAeP,cACvDQ,EAAS1H,aAAY,SAAArD,GAAK,OAAIA,EAAM8K,eAAeR,iBACnD3K,EAAe0D,aAAY,SAAArD,GAAK,OAAIA,EAAMsD,WAAW3D,gBAM3D,OAJA8D,qBAAU,WACRN,EAASkH,GAAmB,CAAChL,OAAM0G,YAClC,CAAC5C,EAAU4C,EAAM1G,IAEb,CAACP,SAAQyL,aAAYQ,SAAQpL,gBDPiBqL,CAAiBH,EAAaI,IAAI,SAA/EnM,EAAR,EAAQA,OAAQyL,EAAhB,EAAgBA,WAAYQ,EAA5B,EAA4BA,OAAQpL,EAApC,EAAoCA,aACpC,OACE,qCACE,cAAC,GAAD,IACY,YAAXb,GAAwB,cAAC,GAAD,IACzB,cAAC,GAAD,UACoB,YAAjBa,EAA6B,cAAC,GAAD,IAAa,cAAC,GAAD,CAAWX,KAAM+L,MAE9D,cAAC,EAAD,CAAiBrF,WAAYmF,EAAaI,IAAI,QAAStF,WAAY4E,QEf5DW,GAAiB9L,YAC5B,sBACA,YAAmB,IAAjBC,EAAgB,EAAhBA,KAAM0G,EAAU,EAAVA,KAEN,OAAO3H,EADWD,IAAXC,SACQ,GAAD,OAAIa,EAAJ,2BAA+BC,EAA/B,qBAAmDG,EAAnD,iBAAgE0G,OAiCnEnF,GAtBErB,YAAY,CAC3BC,KAAM,MACNC,aATmB,CACnB0L,UAAW,GACXZ,WAAY,GACZzL,OAAQ,KACR4K,MAAO,MAMP5J,SAAU,GACVQ,eAAa,qBACV4K,GAAe3K,SAAU,SAACP,GACzBA,EAAMlB,OAAS,UACfkB,EAAM0J,MAAQ,QAHL,eAKVwB,GAAe1K,WAAY,SAACR,EAAOC,GAClCD,EAAMlB,OAAS,WACfkB,EAAMmL,UAAYlL,EAAOC,QAAQsK,QACjCxK,EAAMuK,WAAatK,EAAOC,QAAQuK,eARzB,eAUVS,GAAexK,UAAW,SAACV,EAAOC,GACjCD,EAAMlB,OAAS,WACfkB,EAAM0J,MAAQzJ,EAAOC,WAZZ,MAiBRU,QCfQwK,GAhBQ,WACrB,MAAqBR,cAAhBC,EAAL,oBACA,ECL+B,SAAC9E,GAChC,IAAM5C,EAAWC,cACV/D,EAAQqL,KAARrL,KACAP,EAAUuE,aAAY,SAAArD,GAAK,OAAIA,EAAMqL,cAArCvM,OACDiM,EAAS1H,aAAY,SAAArD,GAAK,OAAIA,EAAMqL,WAAWF,aAC/CZ,EAAalH,aAAY,SAAArD,GAAK,OAAIA,EAAMqL,WAAWd,cACnD5K,EAAe0D,aAAY,SAAArD,GAAK,OAAIA,EAAMsD,WAAW3D,gBAO3D,OALA8D,qBAAU,WACRN,EACE+H,GAAe,CAAC7L,OAAM0G,YACvB,CAAC5C,EAAU9D,EAAM0G,IAEb,CAACjH,SAAQiM,SAAQR,aAAY5K,gBDRiB2L,CAAkBT,EAAaI,IAAI,SAAhFnM,EAAR,EAAQA,OAAQiM,EAAhB,EAAgBA,OAAQR,EAAxB,EAAwBA,WAAY5K,EAApC,EAAoCA,aAEpC,OACE,qCACE,cAAC,GAAD,IACY,YAAXb,GAAwB,cAAC,GAAD,IACzB,cAAC,GAAD,UACoB,YAAjBa,EAA6B,cAAC,GAAD,IAAa,cAAC,GAAD,CAAWX,KAAM+L,MAE9D,cAAC,EAAD,CAAiBrF,WAAYmF,EAAaI,IAAI,QAAStF,WAAY4E,QEhB5DgB,GAAsBnM,YACjC,gCACA,YAAmB,IAAjBC,EAAgB,EAAhBA,KAAM0G,EAAU,EAAVA,KAEN,OAAO3H,EADWD,IAAXC,SACQ,GAAD,OAAIa,EAAJ,0BAA8BC,EAA9B,qBAAkDG,EAAlD,iBAA+D0G,OAiClEnF,GAtBOrB,YAAY,CAChCC,KAAM,WACNC,aATmB,CACnB+L,eAAgB,GAChBjB,WAAY,GACZzL,OAAQ,KACR4K,MAAO,MAMP5J,SAAU,GACVQ,eAAa,qBACViL,GAAoBhL,SAAU,SAACP,GAC9BA,EAAMlB,OAAS,UACfkB,EAAM0J,MAAQ,QAHL,eAKV6B,GAAoB/K,WAAY,SAACR,EAAOC,GACvCD,EAAMlB,OAAS,WACfkB,EAAMwL,eAAiBvL,EAAOC,QAAQsK,QACtCxK,EAAMuK,WAAatK,EAAOC,QAAQuK,eARzB,eAUVc,GAAoB7K,UAAW,SAACV,EAAOC,GACtCD,EAAMlB,OAAS,WACfkB,EAAM0J,MAAQzJ,EAAOC,WAZZ,MAiBRU,QCfQ6K,GAhBQ,WACrB,MAAqBb,cAAhBC,EAAL,oBACA,ECL+B,SAAC9E,GAChC,IAAM5C,EAAWC,cACV/D,EAAQqL,KAARrL,KACCP,EAAWuE,aAAY,SAAArD,GAAK,OAAIA,EAAM0L,mBAAtC5M,OACFiM,EAAS1H,aAAY,SAAArD,GAAK,OAAIA,EAAM0L,gBAAgBF,kBACpDjB,EAAalH,aAAY,SAAArD,GAAK,OAAIA,EAAM0L,gBAAgBnB,cACxD5K,EAAe0D,aAAY,SAAArD,GAAK,OAAIA,EAAMsD,WAAW3D,gBAM3D,OAJA8D,qBAAU,WACRN,EAASoI,GAAoB,CAAClM,OAAM0G,YACnC,CAAC5C,EAAU9D,EAAM0G,IAEb,CAACjH,SAAQyL,aAAYQ,SAAQpL,gBDPegM,CAAkBd,EAAaI,IAAI,SAA/EnM,EAAP,EAAOA,OAAQyL,EAAf,EAAeA,WAAYQ,EAA3B,EAA2BA,OAAQpL,EAAnC,EAAmCA,aAEnC,OACE,qCACE,cAAC,GAAD,IACY,YAAXb,GAAwB,cAAC,GAAD,IACzB,cAAC,GAAD,UACoB,YAAjBa,EAA6B,cAAC,GAAD,IAAa,cAAC,GAAD,CAAWX,KAAM+L,MAE9D,cAAC,EAAD,CAAiBrF,WAAYmF,EAAaI,IAAI,QAAStF,WAAY4E,QEhBlEnM,GAAWD,IAAXC,QAEMwN,GAAcxM,YACzB,qBACA,YAAiB,IAAfgG,EAAc,EAAdA,GAAI/F,EAAU,EAAVA,KACJ,OAAOjB,GAAQ,GAAD,OAAIa,EAAJ,kBAAsBmG,EAAtB,YAA4BlG,EAA5B,qBAAgDG,OAIrDwM,GAAmBzM,YAC9B,0BACA,YAAW,IAATgG,EAAQ,EAARA,GACA,OAAOhH,GAAQ,GAAD,OAAIa,EAAJ,kBAAsBmG,EAAtB,mBAAmClG,OAIxC4M,GAAmB1M,YAC9B,0BACA,YAAiB,IAAfgG,EAAc,EAAdA,GAAI/F,EAAU,EAAVA,KACJ,OAAOjB,GAAQ,GAAD,OAAIa,EAAJ,kBAAsBmG,EAAtB,0BAA0ClG,EAA1C,qBAA8DG,OA6DjEuB,GA7CIrB,YAAY,CAC7BC,KAAM,QACNC,aAdmB,CACnBsM,aAAc,KACdC,YAAa,KACbC,WAAY,GACZC,aAAc,KACdC,YAAa,KACbC,YAAa,GACbC,aAAc,KACdC,YAAa,KACbC,YAAa,IAMbzM,SAAU,GACVQ,eAAa,qBACVsL,GAAYrL,SAAU,SAACP,GACtBA,EAAM+L,aAAe,UACrB/L,EAAMgM,YAAc,QAHX,eAKVJ,GAAYpL,WAAY,SAACR,EAAOC,GAC/BD,EAAM+L,aAAe,WACrB/L,EAAMiM,WAAahM,EAAOC,WAPjB,eASV0L,GAAYlL,UAAW,SAACV,EAAOC,GAC9BD,EAAM+L,aAAe,WACrB/L,EAAMgM,YAAc/L,EAAOC,WAXlB,eAaV2L,GAAiBtL,SAAU,SAACP,GAC3BA,EAAMkM,aAAe,UACrBlM,EAAMmM,YAAc,QAfX,eAiBVN,GAAiBrL,WAAY,SAACR,EAAOC,GACpCD,EAAMkM,aAAe,WACrBlM,EAAMoM,YAAcnM,EAAOC,QAAQsM,SAASC,MAAM,EAAG,MAnB5C,eAqBVZ,GAAiBnL,UAAW,SAACV,EAAOC,GACnCD,EAAMkM,aAAe,WACrBlM,EAAMmM,YAAclM,EAAOC,WAvBlB,eAyBV4L,GAAiBvL,SAAU,SAACP,GAC3BA,EAAMqM,aAAe,UACrBrM,EAAMsM,YAAc,QA3BX,eA6BVR,GAAiBtL,WAAY,SAACR,EAAOC,GACpCD,EAAMqM,aAAe,WACrBrM,EAAMuM,YAActM,EAAOC,QAAQqC,QA/B1B,eAiCVuJ,GAAiBpL,UAAW,SAACV,EAAOC,GACnCD,EAAMqM,aAAe,WACrBrM,EAAMsM,YAAerM,EAAOC,WAnCnB,MAwCRU,QCZQ8L,I,OA3DG,WAEhB,IACA,ECT0B,SAACtH,GAC3B,IAAMjC,EAAWC,cACV/D,EAAQqL,KAARrL,KACD4M,EAAa5I,aAAY,SAAArD,GAAK,OAAIA,EAAM2M,aAAaV,cAC3D,EAAmD5I,aAAY,SAAArD,GAAK,OAAIA,EAAM2M,gBAAvEZ,EAAP,EAAOA,aAAcG,EAArB,EAAqBA,aAAcG,EAAnC,EAAmCA,aAC7BtB,EAAS1H,aAAY,SAAArD,GAAK,OAAIA,EAAM2M,aAAaJ,eACjD/J,EAASa,aAAY,SAAArD,GAAK,OAAIA,EAAM2M,aAAaP,eAQvD,OANA3I,qBAAU,WACRN,EAASyI,GAAY,CAACxG,KAAI/F,UAC1B8D,EAAS0I,GAAiB,CAACzG,QAC3BjC,EAAS2I,GAAiB,CAAC1G,KAAI/F,YAC9B,CAAC+F,EAAIjC,EAAU9D,IAEX,CAAC0M,eAAcG,eAAcG,eAAcJ,aAAYlB,SAAQvI,UDLSoK,CAD7DC,cAAXC,SACAb,EAAP,EAAOA,WAAYF,EAAnB,EAAmBA,aAAcG,EAAjC,EAAiCA,aAAcG,EAA/C,EAA+CA,aAActB,EAA7D,EAA6DA,OAAQvI,EAArE,EAAqEA,OAC7DyB,EAAMC,cAAND,EAEFmI,EAAc5J,EAAO2F,KAAI,SAAAK,GAC7B,OACE,qBACEe,IAAKf,EAAKuE,UAAL,UAAoBvG,IAApB,OAA8BgC,EAAKuE,WAActG,GACtDM,IAAK,SAFGiG,kBAORC,EAAc,WAClB,OACE,qCACE,sBAAKvI,UAAU,QAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAK6E,IAAG,UAAK/C,IAAL,OAAeyF,EAAWiB,cAAgBnG,IAAI,mBAExD,sBAAKrC,UAAU,aAAf,UACE,oBAAIA,UAAU,aAAa1C,MAAM,aAAjC,SAA+CiK,EAAWzM,OAC1D,qBAAKkF,UAAU,mBAAf,SAAmCT,EAAE,iBACrC,qBAAKS,UAAU,cAAf,SAA8BuH,EAAWkB,WACzC,qBAAKzI,UAAU,mBAAf,SAAmCT,EAAE,iBACrC,qBAAKS,UAAU,mBAAf,SAAmCuH,EAAWmB,iBAC9C,qBAAK1I,UAAU,mBAAf,SAAmCT,EAAE,eACrC,qBAAKS,UAAU,kBAAf,SAAkCuH,EAAWoB,YAC7C,qBAAK3I,UAAU,mBAAf,SAAmCT,EAAE,kBACrC,sBAAKS,UAAU,eAAf,UACoB,YAAjBwH,GAA8B,cAAC,GAAD,IAC9BE,WAIP,qBAAK1H,UAAU,cAAf,SACE,eAAC,GAAD,WACE,qBAAKA,UAAU,cAAf,SAA8BT,EAAE,iBACd,YAAjBoI,GAA8B,cAAC,GAAD,IAC/B,cAAC,GAAD,CAAWrN,KAAM+L,EAAO0B,MAAM,EAAG,eAOrCxC,EAA2B,YAAjB8B,EAA6B,cAAC,GAAD,IAAa,KACpDuB,EAA2B,aAAjBvB,EAA8B,cAACkB,EAAD,IAAiB,KAE/D,OACE,qCACGhD,EACAqD,OE3DQ7P,GANA,CACbiJ,KAAM,CACJ1K,gBAAiB,YC+BNuR,GA5BG,SAAC,GAAuC,IAAtCnI,EAAqC,EAArCA,GAAIwC,EAAiC,EAAjCA,MAAOpI,EAA0B,EAA1BA,KAAMgO,EAAoB,EAApBA,UAAWzG,EAAS,EAATA,IAM9C,OACE,cAACI,EAAA,EAAD,CAAMC,UAAWC,IAAM5C,GAAE,iBAAYW,GAAMkC,QALpB,WACvBrB,OAAOC,OAAO,EAAG,IAIqD7B,GAAI5G,GAAOiJ,KAAjF,SACE,eAACgB,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEP,UAAU,MACV3K,MAAM,QACNmL,MAAQA,EAAK,UAAMpB,IAAN,OAAgBoB,GAAUnB,GACvCM,IAAKA,IAEP,eAACc,GAAA,EAAD,CAAaxD,GAAI,CAAChI,MAAO,WAAzB,UACE,cAACyL,GAAA,EAAD,CAAYE,QAAQ,QAAQZ,UAAU,MAAtC,SACG5H,IAEH,cAACsI,GAAA,EAAD,CAAYE,QAAQ,QAAQ3L,MAAM,OAAlC,SACGmR,aCHEC,I,OAnBG,SAAC,GAAY,IAAXzO,EAAU,EAAVA,KAClB,OACE,qBAAK0F,UAAU,SAAf,SAEI1F,EAAKmJ,KAAI,SAAAC,GAAE,OACT,cAAC,GAAD,CAEEhD,GAAIgD,EAAGhD,GACPwC,MAAOQ,EAAG8E,aACV1N,KAAM4I,EAAG5I,KACTuH,IAAKqB,EAAG5I,KACRgO,UAAWpF,EAAGoF,WALTpF,EAAGhD,W,UCNbhH,GAAWD,IAAXC,QAEMsP,GAAatO,YACxB,oBACA,YAAiB,IAAfgG,EAAc,EAAdA,GAAI/F,EAAU,EAAVA,KACJ,OAAOjB,GAAQ,GAAD,OAAIa,EAAJ,iBAAqBmG,EAArB,YAA2BlG,EAA3B,qBAA+CG,OAIpDsO,GAAmBvO,YAC9B,0BACA,YAAW,IAATgG,EAAQ,EAARA,GACA,OAAOhH,GAAQ,GAAD,OAAIa,EAAJ,iBAAqBmG,EAArB,mBAAkClG,OAIvC0O,GAAiBxO,YAC5B,wBACA,YAAiB,IAAfgG,EAAc,EAAdA,GAAI/F,EAAU,EAAVA,KACJ,OAAOjB,GAAQ,GAAD,OAAIa,EAAJ,iBAAqBmG,EAArB,oBAAmClG,EAAnC,qBAAuDG,OAI5DwO,GAAsBzO,YACjC,4BADiD,uCAEjD,+BAAAd,EAAA,6DAAQ8G,EAAR,EAAQA,GAAI/F,EAAZ,EAAYA,KAAZ,kBACSjB,GAAQ,GAAD,OAAIa,EAAJ,iBAAqBmG,EAArB,4BAA2ClG,EAA3C,qBAA+DG,KAD/E,2CAFiD,uDAwB7CyO,GAAavO,YAAY,CAC7BC,KAAM,QACNC,aAnBmB,CACnBsO,YAAa,KACbC,WAAY,KACZC,UAAW,GACX/B,aAAc,KACdC,YAAa,KACb+B,YAAa,GACbC,WAAY,KACZC,UAAW,KACXC,UAAW,GACXC,iBAAiB,EACjBC,cAAe,GACfC,gBAAiB,KACjBC,eAAgB,KAChBC,eAAgB,IAMhB5O,SAAU,CACR6O,eADQ,SACO3O,GACbA,EAAMsO,iBAAmBtO,EAAMsO,kBAGnChO,eAAa,qBACVoN,GAAWnN,SAAU,SAACP,GACrBA,EAAM+N,YAAc,UACpB/N,EAAMgO,WAAa,QAHV,eAKVN,GAAWlN,WAAY,SAACR,EAAOC,GAC9BD,EAAM+N,YAAc,WACpB/N,EAAMiO,UAAYhO,EAAOC,WAPhB,eASVwN,GAAWhN,UAAW,SAACV,EAAOC,GAC7BD,EAAM+N,YAAc,WACpB/N,EAAMgO,WAAa/N,EAAOC,WAXjB,eAaVyN,GAAiBpN,SAAU,SAACP,GAC3BA,EAAMkM,aAAe,UACrBlM,EAAMmM,YAAc,QAfX,eAiBVwB,GAAiBnN,WAAY,SAACR,EAAOC,GACpCD,EAAMkM,aAAe,WACrBlM,EAAMkO,YAAcjO,EAAOC,QAAQ0O,UAAUnC,MAAM,EAAE,MAnB5C,eAqBVkB,GAAiBjN,UAAW,SAACV,EAAOC,GACnCD,EAAMkM,aAAe,WACrBlM,EAAMmM,YAAclM,EAAOC,WAvBlB,eAyBV0N,GAAerN,SAAU,SAACP,GACzBA,EAAMmO,WAAa,UACnBnO,EAAMoO,UAAY,QA3BT,eA6BVR,GAAepN,WAAY,SAACR,EAAOC,GAClCD,EAAMmO,WAAa,WACnBnO,EAAMqO,UAAYpO,EAAOC,QAAQqC,KACjCvC,EAAMuO,cAAgBtO,EAAOC,QAAQqC,KAAKkK,MAAM,EAAG,MAhC1C,eAkCVmB,GAAelN,UAAW,SAACV,EAAOC,GACjCD,EAAMmO,WAAa,WACnBnO,EAAMoO,UAAYnO,EAAOC,WApChB,eAsCV2N,GAAoBtN,SAAU,SAACP,GAC9BA,EAAMwO,gBAAkB,UACxBxO,EAAMyO,eAAiB,QAxCd,eA0CVZ,GAAoBrN,WAAY,SAACR,EAAOC,GACvCD,EAAMwO,gBAAkB,WACxBxO,EAAM0O,eAAiBzO,EAAOC,QAAQsK,QAAQiC,MAAM,EAAG,MA5C9C,eA8CVoB,GAAoBnN,UAAW,SAACV,EAAOC,GACtCD,EAAMwO,gBAAkB,WACxBxO,EAAMyO,eAAiBxO,EAAOC,WAhDrB,MAqDRS,GAAoBmN,GAApBnN,QACQC,GADYkN,GAAXlN,QAEF+N,GAAkBhO,GAAlBgO,eC3BCE,I,OA3EG,WAEhB,IACA,ECT0B,SAACzJ,GAC3B,IAAMjC,EAAWC,cACV/D,EAAQqL,KAARrL,KACP,EAAiEgE,aAAY,SAAArD,GAAK,OAAIA,EAAM8O,gBAArFf,EAAP,EAAOA,YAAa7B,EAApB,EAAoBA,aAAciC,EAAlC,EAAkCA,WAAYK,EAA9C,EAA8CA,gBACxCP,EAAY5K,aAAY,SAAArD,GAAK,OAAIA,EAAM8O,aAAab,aACpDK,EAAkBjL,aAAY,SAAArD,GAAK,OAAIA,EAAM8O,aAAaR,mBAC1DC,EAAgBlL,aAAY,SAAArD,GAAK,OAAIA,EAAM8O,aAAaP,iBACxDF,EAAYhL,aAAY,SAAArD,GAAK,OAAIA,EAAM8O,aAAaT,aACpDH,EAAc7K,aAAY,SAAArD,GAAK,OAAIA,EAAM8O,aAAaZ,eACtDQ,EAAiBrL,aAAY,SAAArD,GAAK,OAAIA,EAAM8O,aAAaJ,kBAa/D,OAXAjL,qBAAU,WACRN,EAASuK,GAAW,CAACtI,KAAI/F,UACzB8D,EAASwK,GAAiB,CAACvI,QAC3BjC,EAASyK,GAAe,CAACxI,KAAI/F,UAC7B8D,EAAS0K,GAAoB,CAACzI,KAAI/F,YACjC,CAAC8D,EAAUiC,EAAI/F,IAMX,CAAC0O,cAAa7B,eAAciC,aAAYK,kBAAiBP,YAAUK,kBAAiBC,gBAAeF,YAAWH,cAAaQ,iBAAgBK,iBAJzH,WACvB5L,EAASwL,QDV2JK,CADpJnC,cAAXoC,SACAlB,EAAP,EAAOA,YAAa7B,EAApB,EAAoBA,aAAciC,EAAlC,EAAkCA,WAAYK,EAA9C,EAA8CA,gBAAiBP,EAA/D,EAA+DA,UAAWK,EAA1E,EAA0EA,gBAAiBC,EAA3F,EAA2FA,cAAeF,EAA1G,EAA0GA,UAAWH,EAArH,EAAqHA,YAAaQ,EAAlI,EAAkIA,eAAgBK,EAAlJ,EAAkJA,iBAC5IG,EAAgBC,KAAKC,MAAMnB,EAAUoB,QAAU,IAAM,IAAOpB,EAAUoB,QAAU,GAC9EpL,EAAMC,cAAND,EAEFgJ,EAAc,WAClB,OACE,qCACE,sBAAKvI,UAAU,QAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAK6E,IAAG,UAAK/C,IAAL,OAAeyH,EAAU3F,aAAevB,IAAI,mBAEtD,sBAAKrC,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCT,EAAE,iBACrC,oBAAIS,UAAU,aAAd,SAA4BuJ,EAAUjM,QACtC,qBAAK0C,UAAU,mBAAf,SAAmCT,EAAE,oBACrC,qBAAKS,UAAU,iBAAf,SAAiCuJ,EAAUhM,WAC3C,qBAAKyC,UAAU,mBAAf,SAAmCT,EAAE,mBACrC,qBAAKS,UAAU,gBAAf,SAAgCuJ,EAAUqB,eAC1C,qBAAK5K,UAAU,mBAAf,SAAmCT,EAAE,mBACrC,qBAAKS,UAAU,gBAAf,SAAgCuJ,EAAUsB,SAC1C,qBAAK7K,UAAU,mBAAf,SAAmCT,EAAE,oBACrC,qBAAKS,UAAU,iBAAf,SAAiCwK,IACjC,qBAAKxK,UAAU,eAAf,SACGuJ,EAAUxN,OAAO0H,KAAI,SAAAO,GAAK,OAAI,8BAAqBA,EAAMlJ,MAAjBkJ,EAAMtD,SAEjD,sBAAKV,UAAU,aAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCT,EAAE,gBACrC,cAACuL,GAAA,EAAD,CAAQxH,QAAQ,WAAW3C,KAAK,QAAQhJ,MAAM,UAC5CiL,QAASyH,EADX,SACgD9K,EAAlBqK,EAAoB,oBAAyB,0BAG7E,eAAC,GAAD,WACkB,YAAfH,GAA4B,cAAC,GAAD,IAC7B,cAAC,GAAD,CAAWnP,KAAMsP,EAAkBC,EAAgBF,UAGvD,sBAAK3J,UAAU,eAAf,UACE,qBAAKA,UAAU,qBAAf,SAAqCT,EAAE,kBACvC,sBAAKS,UAAU,oBAAf,UACoB,YAAjBwH,GAA8B,cAAC,GAAD,IAE7BgC,EAAY/F,KAAI,SAACC,EAAIqH,GAAL,OACd,qBAAKlG,IAAKnB,EAAG2E,UAAH,UAAkBvG,IAAlB,OAA4B4B,EAAG2E,WAActG,GAAcM,IAAK,oBAAyB0I,kBAO/G,gCACE,qBAAK/K,UAAU,kBAAf,SAAkCT,EAAE,qBACpC,eAAC,GAAD,WACuB,YAApBuK,GAAiC,cAAC,GAAD,IAClC,cAAC,GAAD,CAAWxP,KAAM0P,cAOrBzE,EAA0B,YAAhB8D,EAA4B,cAAC,GAAD,IAAa,KACnDT,EAA0B,aAAhBS,EAA6B,cAACd,EAAD,IAAiB,KAE9D,OACE,qCACGhD,EACAqD,OE9EMoC,GAAoBtQ,YAC/B,4BACA,YAA0B,IAAxBC,EAAuB,EAAvBA,KAAMK,EAAiB,EAAjBA,MAAOqG,EAAU,EAAVA,KAEb,OAAO3H,EADWD,IAAXC,SACQ,GAAD,OAAIa,EAAJ,wBAA4BC,EAA5B,qBAAgDG,EAAhD,kBAA8DK,EAA9D,iBAA4EqG,EAA5E,4BAiCHnF,GAtBKrB,YAAY,CAC9BC,KAAM,SACNC,aATmB,CACnBkQ,aAAc,GACdpF,WAAY,GACZzL,OAAQ,KACR4K,MAAO,MAMP5J,SAAU,GACVQ,eAAa,qBACVoP,GAAkBnP,SAAU,SAACP,GAC5BA,EAAMlB,OAAS,UACfkB,EAAM0J,MAAQ,QAHL,eAKVgG,GAAkBlP,WAAY,SAACR,EAAOC,GACrCD,EAAMlB,OAAS,WACfkB,EAAM2P,aAAe1P,EAAOC,QAAQsK,QACpCxK,EAAMuK,WAAatK,EAAOC,QAAQuK,eARzB,eAUViF,GAAkBhP,UAAW,SAACV,EAAOC,GACpCD,EAAMlB,OAAS,WACfkB,EAAM0J,MAAQzJ,EAAOC,WAZZ,MAiBRU,QCRQgP,I,OAtBI,WACjB,MAAqBhF,cAAhBC,EAAL,oBACIgF,EAAYhF,EAAaI,IAAI,SAC7B6E,EAAYjF,EAAaI,IAAI,QAEjC,ECT2B,SAACvL,EAAOqG,GACnC,IAAM5C,EAAWC,cACV/D,EAAQqL,KAARrL,KACCP,EAAWuE,aAAY,SAAArD,GAAK,OAAIA,EAAM+P,iBAAtCjR,OACFiM,EAAS1H,aAAY,SAAArD,GAAK,OAAIA,EAAM+P,cAAcJ,gBAClDpF,EAAalH,aAAY,SAAArD,GAAK,OAAIA,EAAM+P,cAAcxF,cACtD5K,EAAe0D,aAAY,SAAArD,GAAK,OAAIA,EAAMsD,WAAW3D,gBAM3D,OAJA8D,qBAAU,WACRN,EAASuM,GAAkB,CAACrQ,OAAMK,QAAOqG,YACxC,CAAC5C,EAAUzD,EAAOL,EAAM0G,IAEpB,CAACjH,SAAQyL,aAAYQ,SAAQpL,gBDHeqQ,CAAcH,EAAWC,GAArEhR,EAAP,EAAOA,OAAQyL,EAAf,EAAeA,WAAYQ,EAA3B,EAA2BA,OAAQpL,EAAnC,EAAmCA,aAC3BsE,EAAMC,cAAND,EAER,OACE,qCACE,oBAAIS,UAAU,iBAAd,SACGqG,EAAOkF,OAAP,UAAmBhM,EAAE,cAArB,iBAAwC4L,EAAxC,wCAA6EA,EAA7E,UAES,YAAX/Q,GAAwB,cAAC,GAAD,IACzB,cAAC,GAAD,UACoB,YAAjBa,EAA6B,cAAC,GAAD,IAAa,cAAC,GAAD,CAAWX,KAAM+L,MAE9D,cAAC,EAAD,CAAiBrF,WAAYoK,EAAWpQ,MAAOmQ,EAAWlK,WAAY4E,SE1B7D,OAA0B,gCCkB1B2F,I,OAZC,WACd,OACE,sBAAKxL,UAAU,UAAf,UACE,6DACA,qBAAK6E,IAAK4G,GAAQpJ,IAAI,aACtB,cAAC5C,EAAA,EAAD,CAAevI,MAAOoC,EAAtB,SACE,cAACwR,GAAA,EAAD,CAAQxH,QAAQ,WAAW3C,KAAK,QAAQ+B,UAAWC,IAAM5C,GAAG,IAA5D,4BCqBO2L,I,OArBH,WACV,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC9L,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8L,KAAK,IAAIC,QAAU,cAAC,GAAD,MAC1B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAU,cAAC,GAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAU,cAAC,GAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAU,cAAC,GAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,iBAAiBC,QAAU,cAAC,GAAD,MACvC,cAAC,IAAD,CAAOD,KAAK,iBAAiBC,QAAU,cAAC,GAAD,MACvC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAU,cAAC,GAAD,kBCbvBC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCgBCQ,GAdDC,YAAe,CAC3BrQ,QAAS,CACP0C,aACAwH,kBACAO,cACAK,mBACAqE,iBACApD,gBACAmC,iBAEFoC,WAAY,SAAAC,GAAoB,OAAIA,KACpCC,UAAUC,ICZZC,IAASC,OACP,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJS,SAASC,eAAe,SAG1BnB,O","file":"static/js/main.420d305b.chunk.js","sourcesContent":["import { styled, alpha } from '@mui/material/styles';\r\nimport { InputBase } from '@mui/material';\r\n\r\nexport const Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  },\r\n  color: '#fff',\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nexport const SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  color: '#151515',\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50ch',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const styles = {\r\n  bar: {\r\n    background: '#202020'\r\n  },\r\n  search: {\r\n    marginLeft: '10px', \r\n    display: { xs: 'flex'}\r\n  },\r\n  box: {\r\n    display: { xs: 'flex', md: 'flex' }\r\n  }\r\n}","import { createTheme } from \"@mui/material\";\r\n\r\nconst DarkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n  },\r\n});\r\n\r\nexport default DarkTheme;","export const httpService = () => {\r\n\r\n  const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n    try {\r\n      const response = await fetch(url, {method, body, headers});\r\n      if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch(e) {\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  return {request};\r\n}\r\n\r\nexport const _apiBase = 'https://api.themoviedb.org/3/';\r\nexport const _apiKey = 'api_key=a60262500ac52b0699a0d49e7f802ffa';","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { httpService, _apiBase, _apiKey } from '../services/http-service';\r\n\r\nexport const fetchMovieGenres = createAsyncThunk(\r\n  'app/fetchMovieGenres',\r\n  ({lang}) => {\r\n    const {request} = httpService()\r\n    return request(`${_apiBase}genre/movie/list?${_apiKey}&language=${lang}`);\r\n  }\r\n)\r\n\r\nconst initialState = {\r\n  lang: 'en',\r\n  query: 'search',\r\n  genresStatus: null,\r\n  genresError: null,\r\n  movieGenres: []\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    changeLanguage(state, action) {\r\n      state.lang = action.payload.value\r\n    },\r\n    changeSearchText(state, action) {\r\n      state.query = action.payload.text\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [fetchMovieGenres.pending]: (state) => {\r\n      state.genresStatus = 'loading';\r\n      state.genresError = null;\r\n    },\r\n    [fetchMovieGenres.fulfilled]: (state, action) => {\r\n      state.genresStatus = 'resolved';\r\n      state.movieGenres = action.payload.genres;\r\n    },\r\n    [fetchMovieGenres.rejected]: (state, action) => {\r\n      state.genresStatus = 'rejected';\r\n      state.genresError = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nconst {actions, reducer} = appSlice;\r\nexport default reducer;\r\nexport const {\r\n  changeLanguage,\r\n  changeSearchText\r\n} = actions;","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nconst translationsEn = {\r\n  inputPlaceholder: 'Movie search',\r\n  toggleBtnsPopMovies: 'Popular',\r\n  toggleBtnsTopMovies: 'Top rated',\r\n  toggleBtnsUpMovies: 'Upcoming',\r\n  searchResl: 'Search results',\r\n  actor: {\r\n    birth: 'Birthday:',\r\n    place: 'Place of birth:',\r\n    bio: 'Biography:',\r\n    photos: 'Photos',\r\n    known: 'Known by'\r\n  },\r\n  movie: {\r\n    title: 'Title:',\r\n    overview: 'Overview:',\r\n    release: 'Release date:',\r\n    revenue: 'Revenue:',\r\n    duration: 'Duration:',\r\n    showAllCast: 'Show all',\r\n    hideAllCast: 'Hide all',\r\n    cast: 'Top Billed Cast',\r\n    images: 'Images',\r\n    recommend: 'Recommendations'\r\n  }\r\n}\r\nconst translationsRu = {\r\n  inputPlaceholder: 'Поиск фильмов',\r\n  toggleBtnsPopMovies: 'Популярные',\r\n  toggleBtnsTopMovies: 'Топовые',\r\n  toggleBtnsUpMovies: 'Ожидаемые',\r\n  searchResl: 'Результаты поиска',\r\n  actor: {\r\n    birth: 'Дата рождения:',\r\n    place: 'Место рождения:',\r\n    bio: 'Биография:',\r\n    photos: 'Фотографии',\r\n    known: 'Роли в фильмах'\r\n  },\r\n  movie: {\r\n    title: 'Название:',\r\n    overview: 'Описание:',\r\n    release: 'Дата релиза:',\r\n    revenue: 'Бюджет:',\r\n    duration: 'Продолжительность:',\r\n    showAllCast: 'Показать всех',\r\n    hideAllCast: 'Скрыть всех',\r\n    cast: 'Популярные актёры',\r\n    images: 'Кадры фильма',\r\n    recommend: 'Рекомендации'\r\n  }\r\n}\r\n\r\ni18n\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {translation: translationsEn},\r\n      ru: {translation: translationsRu}\r\n    },\r\n    lng: 'en',\r\n    fallbackLng: 'en',\r\n    interpolation: {escapeValue: false}\r\n  })\r\n\r\nexport default i18n;","import { Link } from 'react-router-dom';\r\nimport {Search, SearchIconWrapper, StyledInputBase, styles} from './styles';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { Container, Toolbar, Box, AppBar, Select, MenuItem, FormControl, ThemeProvider } from '@mui/material';\r\nimport DarkTheme from '../mui-theme/dark-theme';\r\nimport { useHeader } from './use-header';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './header.scss';\r\n\r\nconst Header = () => {\r\n  const {searchText, lang, handleChangeLang, hadleChangeInput, submitSearchForm} = useHeader();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <ThemeProvider theme={DarkTheme}>\r\n      <AppBar position=\"static\" sx={styles.bar}>\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar>\r\n            <Link to=\"/\" className=\"header-logo\">\r\n                movie app\r\n            </Link>\r\n            <Box sx={{flexGrow: 1}} />\r\n            <Search sx={styles.search}>\r\n              <SearchIconWrapper>\r\n                <SearchIcon/>\r\n              </SearchIconWrapper>\r\n              <StyledInputBase\r\n                placeholder={t('inputPlaceholder')}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                value={searchText}\r\n                onChange={hadleChangeInput}\r\n                onKeyDown={submitSearchForm}\r\n              />\r\n            </Search>\r\n            <Box sx={styles.box}>\r\n              <FormControl fullWidth>\r\n                <Select\r\n                  id=\"demo-simple-select\"\r\n                  size={\"small\"}\r\n                  color={'success'}\r\n                  value={lang}\r\n                  onChange={handleChangeLang}\r\n                >\r\n                  <MenuItem value='en'>EN</MenuItem>\r\n                  <MenuItem value='ru'>RU</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Header;","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeLanguage, changeSearchText } from '../../redux/appSlice';\r\nimport { fetchMovieGenres } from '../../redux/appSlice';\r\nimport i18n from \"../../i18n/i18n\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport const useHeader = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const dispatch = useDispatch();\r\n  const lang = useSelector(state => state.appReducer.lang);\r\n  let navigate = useNavigate();\r\n\r\n  const handleChangeLang = (e) => {\r\n    dispatch(changeLanguage({value: e.target.value}));\r\n    i18n.changeLanguage(e.target.value);\r\n  };\r\n\r\n  const hadleChangeInput = (e) => {\r\n    setSearchText((e.target.value));\r\n  };\r\n\r\n  const submitSearchForm = (e) => {\r\n    if (e.key === 'Enter') {\r\n      dispatch(changeSearchText({text: searchText}));\r\n      navigate(`/search?query=${searchText}`);\r\n      setSearchText('');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovieGenres({lang}));\r\n  }, [dispatch, lang])\r\n\r\n  return {searchText, setSearchText, lang, handleChangeLang, hadleChangeInput, submitSearchForm};\r\n}","const styles = {\r\n  pagination: {\r\n    marginBottom: '20px', \r\n    display: 'flex', \r\n    justifyContent: 'center'\r\n  }\r\n};\r\n\r\nexport default styles;","import DarkTheme from '../mui-theme/dark-theme';\r\nimport { useCallback } from 'react';\r\nimport { Pagination, ThemeProvider } from '@mui/material';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport styles from './styles';\r\n\r\nconst BasicPagination = ({actualPage, query, countPages = 10}) => {\r\n  const DEFAULT_PAGE = 1;\r\n  let url = useLocation();\r\n  let navigate = useNavigate();\r\n\r\n  const handlePageChange = useCallback((page) => {\r\n    if (query) {\r\n      navigate(`${url.pathname}?query=${query}&page=${page}`)\r\n    } else {\r\n      navigate(`${url.pathname}?page=${page}`)\r\n    }\r\n    window.scroll(0, 0);\r\n  }, [navigate, query, url.pathname]);\r\n\r\n  return (\r\n    <ThemeProvider theme={DarkTheme}>\r\n      <Pagination \r\n        page={+actualPage || DEFAULT_PAGE}\r\n        count={countPages} \r\n        color=\"success\"\r\n        hideNextButton\r\n        hidePrevButton\r\n        sx={styles.pagination}\r\n        onChange={e => handlePageChange(e.target.textContent)}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default BasicPagination;","export const img_300 = \"https://image.tmdb.org/t/p/w300\";\r\nexport const notfound_300 = \"https://via.placeholder.com/300x450.jpg/333333/ffffff?text=Poster+not+found\";","const styles = {\r\n  card: {\r\n    maxWidth: '270px', \r\n    position: 'relative', \r\n    backgroundColor: '#151515'\r\n  },\r\n  chip: {\r\n    position: 'absolute', \r\n    zIndex: 1000, \r\n    borderRadius: 1\r\n  }\r\n}\r\n\r\nexport default styles;","import { Card, CardContent, CardMedia, Typography, CardActionArea, Chip } from \"@mui/material\";\r\nimport { img_300, notfound_300 } from \"../../services/media-service\";\r\nimport { useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from './styles';\r\n\r\nexport default function MovieCard({id, vote, title, alt, poster, genres}) {\r\n\r\n  const movieRate = useMemo(() => {\r\n    if (vote >= 7) return 'success';\r\n    if (vote > 4) return 'warning';\r\n    return 'error';\r\n  }, [vote])\r\n\r\n  const clickOnMovieCard = () => {\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  return (\r\n    <Card sx={styles.card} key={id} component={Link} to={`/movie/${id}`} onClick={clickOnMovieCard}>\r\n      <Chip \r\n        label={vote.toFixed(1)} \r\n        color={movieRate}\r\n        sx={styles.chip}\r\n      />\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"400\"\r\n          image={poster ? `${img_300}${poster}` : notfound_300}\r\n          alt={alt}\r\n        />\r\n        <CardContent sx={{color: '#e5e5e5'}}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"#777\">\r\n            {genres.join(' ')}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}","import MovieCard from '../movie-card/movie-card';\r\nimport './movie-list.scss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst MovieList = ({data}) => {\r\n  const movieGenres = useSelector(state => state.appReducer.movieGenres);\r\n  \r\n  return (\r\n    <div className=\"movies\">\r\n      {\r\n        data.map(el => \r\n          <MovieCard\r\n            key={el.id} \r\n            id={el.id}\r\n            vote={el.vote_average} \r\n            title={el.title}\r\n            alt={el.title} \r\n            poster={el.poster_path}\r\n            genres={el.genre_ids.map((item) => movieGenres.find((genre) => genre.id === item).name)}\r\n          />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieList;","const styles = {\r\n  togglebtns: {\r\n    margin: '30px 0', \r\n    display: 'flex', \r\n    justifyContent: {xs: 'center', sm: 'end'}\r\n  }\r\n};\r\n\r\nexport default styles;","import {useState} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ThemeProvider, ToggleButton, ToggleButtonGroup } from '@mui/material';\r\nimport DarkTheme from '../mui-theme/dark-theme';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useLocation } from 'react-router';\r\nimport styles from './styles';\r\n\r\nconst ToggleButtons = () => {\r\n  const url = useLocation();\r\n  const { t } = useTranslation();\r\n  const [alignment, setAlignment] = useState(url.pathname);\r\n\r\n  const handleChange = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={DarkTheme}>\r\n      <ToggleButtonGroup \r\n        sx={styles.togglebtns}\r\n        size=\"small\"\r\n        color=\"success\"\r\n        value={alignment}\r\n        exclusive\r\n        onChange={handleChange}\r\n      >\r\n        <ToggleButton value=\"/\" component={Link} to=\"/\">{t('toggleBtnsPopMovies')}</ToggleButton>\r\n        <ToggleButton value=\"/toprated\" component={Link} to=\"/toprated\">{t('toggleBtnsTopMovies')}</ToggleButton>\r\n        <ToggleButton value=\"/upcoming\" component={Link} to=\"/upcoming\">{t('toggleBtnsUpMovies')}</ToggleButton>\r\n      </ToggleButtonGroup>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default ToggleButtons;","export default __webpack_public_path__ + \"static/media/error.89355b4a.gif\";","import img from './error.gif';\r\nimport './error-message.scss';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img className='error-img' src={img} alt=\"Error\"/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../error-message/error-message\";\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","const styles = {\r\n  spinner: {\r\n    display: 'block', \r\n    margin: '40px auto'\r\n  }\r\n};\r\n\r\nexport default styles;","import { SpinnerCircularFixed } from 'spinners-react';\r\nimport styles from './styles';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <SpinnerCircularFixed style={styles.spinner}/>\r\n  )\r\n};\r\n\r\nexport default Spinner;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { httpService, _apiBase, _apiKey } from '../services/http-service';\r\n\r\nexport const fetchPopularMovies = createAsyncThunk(\r\n  'popular/fetchPopularMovies',\r\n  ({lang, page}) => {\r\n    const {request} = httpService();\r\n    return request(`${_apiBase}movie/popular?${_apiKey}&language=${lang}&page=${page}`);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  popularMovies: [],\r\n  totalPages: 10,\r\n  status: null,\r\n  error: null\r\n};\r\n\r\nconst popularSlice = createSlice({\r\n  name: 'popular',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchPopularMovies.pending]: (state) => {\r\n      state.status = 'loading';\r\n      state.error = null;\r\n    },\r\n    [fetchPopularMovies.fulfilled]: (state, action) => {\r\n      state.status = 'resolved';\r\n      state.popularMovies = action.payload.results;\r\n      state.totalPages = action.payload.total_pages;\r\n    },\r\n    [fetchPopularMovies.rejected]: (state, action) => {\r\n      state.status = 'rejected';\r\n      state.error = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nconst {reducer} = popularSlice;\r\nexport default reducer;","import {useSelector} from 'react-redux';\r\n\r\nexport const useLang = () => {\r\n  const lang = useSelector(state => state.appReducer.lang);\r\n  return {lang};\r\n}","import BasicPagination from '../../pagination/pagination';\r\nimport MovieList from '../../movie-list/movie-list';\r\nimport ToggleButtons from '../../toggle-buttons/toggle-buttons';\r\nimport ErrorBoundary from '../../error-boundary/error-boundary';\r\nimport Spinner from '../../spinner/spinner';\r\nimport { usePopularMovies } from './use-popular-movies';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nconst PopularMovies = () => {\r\n  let [searchParams] = useSearchParams();\r\n  const { status, totalPages, movies, genresStatus } = usePopularMovies(searchParams.get(\"page\")); \r\n  return (\r\n    <>\r\n      <ToggleButtons />\r\n      {status === 'loading' && <Spinner/>}\r\n      <ErrorBoundary>\r\n        {genresStatus === 'loading' ? <Spinner/> : <MovieList data={movies}/>}\r\n      </ErrorBoundary>\r\n      <BasicPagination actualPage={searchParams.get(\"page\")} countPages={totalPages}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PopularMovies;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { fetchPopularMovies } from '../../../redux/popularMoviesSlice';\r\nimport { useLang } from \"../../../services/use-lang\";\r\n\r\nexport const usePopularMovies = (page) => {\r\n  const dispatch = useDispatch();\r\n  const {lang} = useLang();\r\n  const {status} = useSelector(state => state.popularReducer);\r\n  const totalPages = useSelector(state => state.popularReducer.totalPages);\r\n  const movies = useSelector(state => state.popularReducer.popularMovies);\r\n  const genresStatus = useSelector(state => state.appReducer.genresStatus);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPopularMovies({lang, page}));\r\n  }, [dispatch, page, lang]);\r\n\r\n  return {status, totalPages, movies, genresStatus};\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { httpService, _apiBase, _apiKey } from '../services/http-service';\r\n\r\nexport const fetchTopMovies = createAsyncThunk(\r\n  'top/fetchTopMovies',\r\n  ({lang, page}) => {\r\n    const {request} = httpService();\r\n    return request(`${_apiBase}movie/top_rated?${_apiKey}&language=${lang}&page=${page}`);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  topMovies: [],\r\n  totalPages: 10,\r\n  status: null,\r\n  error: null\r\n};\r\n\r\nconst topSlice = createSlice({\r\n  name: 'top',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchTopMovies.pending]: (state) => {\r\n      state.status = 'loading';\r\n      state.error = null;\r\n    },\r\n    [fetchTopMovies.fulfilled]: (state, action) => {\r\n      state.status = 'resolved';\r\n      state.topMovies = action.payload.results;\r\n      state.totalPages = action.payload.total_pages;\r\n    },\r\n    [fetchTopMovies.rejected]: (state, action) => {\r\n      state.status = 'rejected';\r\n      state.error = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nconst {reducer} = topSlice;\r\nexport default reducer;","import BasicPagination from '../../pagination/pagination';\r\nimport MovieList from '../../movie-list/movie-list';\r\nimport ToggleButtons from '../../toggle-buttons/toggle-buttons';\r\nimport ErrorBoundary from '../../error-boundary/error-boundary';\r\nimport Spinner from '../../spinner/spinner';\r\nimport { useTopratedMovies } from './use-toprated-movies';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nconst TopRatedMovies = () => {\r\n  let [searchParams] = useSearchParams();\r\n  const { status, movies, totalPages, genresStatus } = useTopratedMovies(searchParams.get(\"page\"));\r\n  \r\n  return (\r\n    <>\r\n      <ToggleButtons />\r\n      {status === 'loading' && <Spinner/>}\r\n      <ErrorBoundary>\r\n        {genresStatus === 'loading' ? <Spinner/> : <MovieList data={movies}/>}\r\n      </ErrorBoundary>\r\n      <BasicPagination actualPage={searchParams.get(\"page\")} countPages={totalPages}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TopRatedMovies;","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchTopMovies } from '../../../redux/topMoviesSlice';\r\nimport { useLang } from \"../../../services/use-lang\";\r\n\r\nexport const useTopratedMovies = (page) => {\r\n  const dispatch = useDispatch();\r\n  const {lang} = useLang();\r\n  const {status} = useSelector(state => state.topReducer)\r\n  const movies = useSelector(state => state.topReducer.topMovies);\r\n  const totalPages = useSelector(state => state.topReducer.totalPages);\r\n  const genresStatus = useSelector(state => state.appReducer.genresStatus);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      fetchTopMovies({lang, page}))\r\n  }, [dispatch, lang, page]);\r\n\r\n  return {status, movies, totalPages, genresStatus};\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { httpService, _apiBase, _apiKey } from '../services/http-service';\r\n\r\nexport const fetchUpcomingMovies = createAsyncThunk(\r\n  'upcoming/fetchUpcomingMovies',\r\n  ({lang, page}) => {\r\n    const {request} = httpService()\r\n    return request(`${_apiBase}movie/upcoming?${_apiKey}&language=${lang}&page=${page}`);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  upcomingMovies: [],\r\n  totalPages: 10,\r\n  status: null,\r\n  error: null\r\n};\r\n\r\nconst upcomingSlice = createSlice({\r\n  name: 'upcoming',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchUpcomingMovies.pending]: (state) => {\r\n      state.status = 'loading';\r\n      state.error = null;\r\n    },\r\n    [fetchUpcomingMovies.fulfilled]: (state, action) => {\r\n      state.status = 'resolved';\r\n      state.upcomingMovies = action.payload.results;\r\n      state.totalPages = action.payload.total_pages;\r\n    },\r\n    [fetchUpcomingMovies.rejected]: (state, action) => {\r\n      state.status = 'rejected';\r\n      state.error = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nconst {reducer} = upcomingSlice;\r\nexport default reducer;","import BasicPagination from '../../pagination/pagination';\r\nimport MovieList from '../../movie-list/movie-list';\r\nimport ToggleButtons from '../../toggle-buttons/toggle-buttons';\r\nimport ErrorBoundary from '../../error-boundary/error-boundary';\r\nimport Spinner from '../../spinner/spinner';\r\nimport { useUpcomingMovies } from './use-upcoming-movies';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nconst UpcomingMovies = () => {\r\n  let [searchParams] = useSearchParams();\r\n  const {status, totalPages, movies, genresStatus} = useUpcomingMovies(searchParams.get(\"page\"));\r\n\r\n  return (\r\n    <>\r\n      <ToggleButtons />\r\n      {status === 'loading' && <Spinner/>}\r\n      <ErrorBoundary>\r\n        {genresStatus === 'loading' ? <Spinner/> : <MovieList data={movies}/>}\r\n      </ErrorBoundary>\r\n      <BasicPagination actualPage={searchParams.get(\"page\")} countPages={totalPages}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpcomingMovies;","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport { fetchUpcomingMovies } from \"../../../redux/upcomingMoviesSlice\";\r\nimport { useLang } from \"../../../services/use-lang\";\r\n\r\nexport const useUpcomingMovies = (page) => {\r\n  const dispatch = useDispatch();\r\n  const {lang} = useLang();\r\n  const { status } = useSelector(state => state.upcomingReducer);\r\n  const movies = useSelector(state => state.upcomingReducer.upcomingMovies);\r\n  const totalPages = useSelector(state => state.upcomingReducer.totalPages);\r\n  const genresStatus = useSelector(state => state.appReducer.genresStatus);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUpcomingMovies({lang, page}))\r\n  }, [dispatch, lang, page]);\r\n\r\n  return {status, totalPages, movies, genresStatus};\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { httpService, _apiBase, _apiKey } from '../services/http-service';\r\n\r\nconst {request} = httpService();\r\n\r\nexport const fetchPerson = createAsyncThunk(\r\n  'actor/fetchPerson',\r\n  ({id, lang}) => {\r\n    return request(`${_apiBase}person/${id}?${_apiKey}&language=${lang}`);\r\n  }\r\n);\r\n\r\nexport const fetchActorImages = createAsyncThunk(\r\n  'actor/fetchActorImages',\r\n  ({id}) => {\r\n    return request(`${_apiBase}person/${id}/images?${_apiKey}`);\r\n  }\r\n);\r\n\r\nexport const fetchActorMovies = createAsyncThunk(\r\n  'actor/fetchActorMovies',\r\n  ({id, lang}) => {\r\n    return request(`${_apiBase}person/${id}/movie_credits?${_apiKey}&language=${lang}`);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  personStatus: null,\r\n  personError: null,\r\n  personData: {},\r\n  imagesStatus: null,\r\n  imagesError: null,\r\n  actorImages: [],\r\n  moviesStatus: null,\r\n  moviesError: null,\r\n  actorMovies: []\r\n};\r\n\r\nconst actorSlice = createSlice({\r\n  name: 'actor',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchPerson.pending]: (state) => {\r\n      state.personStatus = 'loading';\r\n      state.personError = null;\r\n    },\r\n    [fetchPerson.fulfilled]: (state, action) => {\r\n      state.personStatus = 'resolved';\r\n      state.personData = action.payload;\r\n    },\r\n    [fetchPerson.rejected]: (state, action) => {\r\n      state.personStatus = 'rejected';\r\n      state.personError = action.payload;\r\n    },\r\n    [fetchActorImages.pending]: (state) => {\r\n      state.imagesStatus = 'loading';\r\n      state.imagesError = null;\r\n    },\r\n    [fetchActorImages.fulfilled]: (state, action) => {\r\n      state.imagesStatus = 'resolved';\r\n      state.actorImages = action.payload.profiles.slice(0, 4);\r\n    },\r\n    [fetchActorImages.rejected]: (state, action) => {\r\n      state.imagesStatus = 'rejected';\r\n      state.imagesError = action.payload;\r\n    },\r\n    [fetchActorMovies.pending]: (state) => {\r\n      state.moviesStatus = 'loading';\r\n      state.moviesError = null;\r\n    },\r\n    [fetchActorMovies.fulfilled]: (state, action) => {\r\n      state.moviesStatus = 'resolved';\r\n      state.actorMovies = action.payload.cast;\r\n    },\r\n    [fetchActorMovies.rejected]: (state, action) => {\r\n      state.moviesStatus = 'rejected';\r\n      state.moviesError =  action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nconst {reducer} = actorSlice;\r\nexport default reducer;","import MovieList from '../../movie-list/movie-list';\r\nimport ErrorBoundary from '../../error-boundary/error-boundary';\r\nimport {img_300, notfound_300} from '../../../services/media-service';\r\nimport Spinner from '../../spinner/spinner';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport { useActorPage } from './use-actor-page';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useParams } from 'react-router-dom';\r\nimport './actor-page.scss';\r\n\r\n\r\nconst ActorPage = () => {\r\n\r\n  const {actorId} = useParams();\r\n  const {personData, personStatus, imagesStatus, moviesStatus, movies, images} = useActorPage(actorId);\r\n  const { t } = useTranslation();\r\n\r\n  const actorImages = images.map(item => {\r\n    return (\r\n      <img key={nanoid()} \r\n        src={item.file_path ? `${img_300}${item.file_path}` : notfound_300} \r\n        alt={'actor'}\r\n      />\r\n    )\r\n  });\r\n\r\n  const PageContent = () => {\r\n    return (\r\n      <>\r\n        <div className=\"actor\">\r\n          <div className=\"actor-avatar\">\r\n            <img src={`${img_300}${personData.profile_path}`} alt=\"actor avatar\" />\r\n          </div>\r\n          <div className=\"actor-info\">\r\n            <h1 className=\"actor-name\" title=\"actor-name\">{personData.name}</h1>\r\n            <div className=\"actor-blocktitle\">{t('actor.birth')}</div>\r\n            <div className=\"actor-birth\">{personData.birthday}</div>\r\n            <div className=\"actor-blocktitle\">{t('actor.place')}</div>\r\n            <div className=\"actor-birthplace\">{personData.place_of_birth}</div>\r\n            <div className=\"actor-blocktitle\">{t('actor.bio')}</div>\r\n            <div className=\"actor-biography\">{personData.biography}</div>\r\n            <div className=\"actor-blocktitle\">{t('actor.photos')}</div>\r\n            <div className=\"actor-photos\">\r\n              {imagesStatus === 'loading' && <Spinner/>}\r\n              {actorImages}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"actor-works\">\r\n          <ErrorBoundary>\r\n            <div className=\"actor-known\">{t('actor.known')}</div>\r\n            {moviesStatus === 'loading' && <Spinner/>}\r\n            <MovieList data={movies.slice(0, 10)}/>\r\n          </ErrorBoundary>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const spinner = personStatus === 'loading' ? <Spinner/> : null;\r\n  const content = personStatus === 'resolved' ? <PageContent/> : null;\r\n\r\n  return (\r\n    <>\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ActorPage;","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchPerson, fetchActorImages, fetchActorMovies } from '../../../redux/actorSlice';\r\nimport { useLang } from \"../../../services/use-lang\";\r\n\r\nexport const useActorPage = (id) => {\r\n  const dispatch = useDispatch();\r\n  const {lang} = useLang();\r\n  const personData = useSelector(state => state.actorReducer.personData);\r\n  const {personStatus, imagesStatus, moviesStatus} = useSelector(state => state.actorReducer)\r\n  const movies = useSelector(state => state.actorReducer.actorMovies);\r\n  const images = useSelector(state => state.actorReducer.actorImages);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPerson({id, lang}))\r\n    dispatch(fetchActorImages({id}));\r\n    dispatch(fetchActorMovies({id, lang}));\r\n  }, [id, dispatch, lang]);\r\n\r\n  return {personStatus, imagesStatus, moviesStatus, personData, movies, images};\r\n}","const styles = {\r\n  card: {\r\n    backgroundColor: '#151515'\r\n  }\r\n};\r\n\r\nexport default styles;","import { Card, CardContent, CardMedia, Typography, CardActionArea } from '@mui/material';\r\nimport {img_300, notfound_300} from '../../services/media-service';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './styles';\r\n\r\nconst ActorCard = ({id, image, name, character, alt}) => {\r\n\r\n  const clickOnActorCard = () => {\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  return (\r\n    <Card component={Link} to={`/actor/${id}`} onClick={clickOnActorCard} sx={styles.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          width=\"150px\"\r\n          image={ image ? `${img_300}${image}` : notfound_300}\r\n          alt={alt}\r\n        />\r\n        <CardContent sx={{color: '#e5e5e5'}}>\r\n          <Typography variant=\"body1\" component=\"div\">\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"#777\">\r\n            {character}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ActorCard;","import ActorCard from \"../actor-card/actor-card\";\r\nimport './actor-list.scss';\r\n\r\nconst ActorList = ({data}) => {\r\n  return (\r\n    <div className=\"actors\">\r\n      {\r\n        data.map(el => \r\n          <ActorCard\r\n            key={el.id}\r\n            id={el.id}\r\n            image={el.profile_path}\r\n            name={el.name}\r\n            alt={el.name}\r\n            character={el.character}\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActorList;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { httpService, _apiBase, _apiKey } from '../services/http-service';\r\n\r\nconst {request} = httpService();\r\n\r\nexport const fetchMovie = createAsyncThunk(\r\n  'movie/fetchMovie',\r\n  ({id, lang}) => {\r\n    return request(`${_apiBase}movie/${id}?${_apiKey}&language=${lang}`);\r\n  }\r\n);\r\n\r\nexport const fetchMovieImages = createAsyncThunk(\r\n  'movie/fetchMovieImages',\r\n  ({id}) => {\r\n    return request(`${_apiBase}movie/${id}/images?${_apiKey}`);\r\n  }\r\n);\r\n\r\nexport const fetchMovieCast = createAsyncThunk(\r\n  'movie/fetchMovieCast',\r\n  ({id, lang}) => {\r\n    return request(`${_apiBase}movie/${id}/credits?${_apiKey}&language=${lang}`);\r\n  }\r\n);\r\n\r\nexport const fetchMovieRecommend = createAsyncThunk(\r\n  'movie/fetchMovieRecommend',\r\n  async ({id, lang}) => {\r\n    return request(`${_apiBase}movie/${id}/recommendations?${_apiKey}&language=${lang}`);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  movieStatus: null,\r\n  movieError: null,\r\n  movieData: {},\r\n  imagesStatus: null,\r\n  imagesError: null,\r\n  movieImages: [],\r\n  castStatus: null,\r\n  castError: null,\r\n  movieCast: [],\r\n  isShortListCast: true,\r\n  shortListCast: [],\r\n  recommendStatus: null,\r\n  recommendError: null,\r\n  movieRecommend: []\r\n};\r\n\r\nconst movieSlice = createSlice({\r\n  name: 'actor',\r\n  initialState,\r\n  reducers: {\r\n    toggleCastList(state) {\r\n      state.isShortListCast = !state.isShortListCast\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchMovie.pending]: (state) => {\r\n      state.movieStatus = 'loading';\r\n      state.movieError = null;\r\n    },\r\n    [fetchMovie.fulfilled]: (state, action) => {\r\n      state.movieStatus = 'resolved';\r\n      state.movieData = action.payload;\r\n    },\r\n    [fetchMovie.rejected]: (state, action) => {\r\n      state.movieStatus = 'rejected';\r\n      state.movieError = action.payload;\r\n    },\r\n    [fetchMovieImages.pending]: (state) => {\r\n      state.imagesStatus = 'loading';\r\n      state.imagesError = null;\r\n    },\r\n    [fetchMovieImages.fulfilled]: (state, action) => {\r\n      state.imagesStatus = 'resolved';\r\n      state.movieImages = action.payload.backdrops.slice(0,8);\r\n    },\r\n    [fetchMovieImages.rejected]: (state, action) => {\r\n      state.imagesStatus = 'rejected';\r\n      state.imagesError = action.payload;\r\n    },\r\n    [fetchMovieCast.pending]: (state) => {\r\n      state.castStatus = 'loading';\r\n      state.castError = null;\r\n    },\r\n    [fetchMovieCast.fulfilled]: (state, action) => {\r\n      state.castStatus = 'resolved';\r\n      state.movieCast = action.payload.cast;\r\n      state.shortListCast = action.payload.cast.slice(0, 6);\r\n    },\r\n    [fetchMovieCast.rejected]: (state, action) => {\r\n      state.castStatus = 'rejected';\r\n      state.castError = action.payload;\r\n    },\r\n    [fetchMovieRecommend.pending]: (state) => {\r\n      state.recommendStatus = 'loading';\r\n      state.recommendError = null;\r\n    },\r\n    [fetchMovieRecommend.fulfilled]: (state, action) => {\r\n      state.recommendStatus = 'resolved';\r\n      state.movieRecommend = action.payload.results.slice(0, 5);\r\n    },\r\n    [fetchMovieRecommend.rejected]: (state, action) => {\r\n      state.recommendStatus = 'rejected';\r\n      state.recommendError = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nconst {actions, reducer} = movieSlice;\r\nexport default reducer;\r\nexport const {toggleCastList} = actions;","import ActorList from '../../actor-list/actor-list';\r\nimport MovieList from '../../movie-list/movie-list';\r\nimport ErrorBoundary from '../../error-boundary/error-boundary';\r\nimport { Button } from '@mui/material';\r\nimport Spinner from '../../spinner/spinner';\r\nimport { img_300, notfound_300 } from '../../../services/media-service';\r\nimport { useMoviePage } from './use-movie-page';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './movie-page.scss';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MoviePage = () => {\r\n\r\n  const {movieId} = useParams();\r\n  const {movieStatus, imagesStatus, castStatus, recommendStatus, movieData, isShortListCast, shortListCast, movieCast, movieImages, movieRecommend, togglelCastItems} = useMoviePage(movieId);\r\n  const movieDuration = Math.floor(movieData.runtime / 60) + ':' + (movieData.runtime % 60);\r\n  const { t } = useTranslation();\r\n\r\n  const PageContent = () => {\r\n    return (\r\n      <>\r\n        <div className=\"movie\">\r\n          <div className=\"movie-avatar\">\r\n            <img src={`${img_300}${movieData.poster_path}`} alt=\"movie avatar\" />\r\n          </div>\r\n          <div className=\"movie-info\">\r\n            <div className=\"movie-blocktitle\">{t('movie.title')}</div>\r\n            <h1 className=\"movie-name\">{movieData.title}</h1>\r\n            <div className=\"movie-blocktitle\">{t('movie.overview')}</div>\r\n            <div className=\"movie-overview\">{movieData.overview}</div>\r\n            <div className=\"movie-blocktitle\">{t('movie.release')}</div>\r\n            <div className=\"movie-release\">{movieData.release_date}</div>\r\n            <div className=\"movie-blocktitle\">{t('movie.revenue')}</div>\r\n            <div className=\"movie-revenue\">{movieData.budget}</div>\r\n            <div className=\"movie-blocktitle\">{t('movie.duration')}</div>\r\n            <div className=\"movie-duration\">{movieDuration}</div>\r\n            <div className=\"movie-genres\">\r\n              {movieData.genres.map(genre => <div key={genre.id}>{genre.name}</div>)}\r\n            </div>\r\n            <div className=\"movie-cast\">\r\n              <div className=\"movie-cast_header\">\r\n                <div className=\"movie-cast_title\">{t('movie.cast')}</div>\r\n                <Button variant=\"outlined\" size=\"small\" color=\"inherit\" \r\n                  onClick={togglelCastItems}>{isShortListCast ? t('movie.showAllCast') : t('movie.hideAllCast')}\r\n                </Button>\r\n              </div>\r\n              <ErrorBoundary>\r\n                {castStatus === 'loading' && <Spinner/>}\r\n                <ActorList data={isShortListCast ? shortListCast : movieCast}/>\r\n              </ErrorBoundary>\r\n            </div>\r\n            <div className=\"movie-images\">\r\n              <div className=\"movie-images_title\">{t('movie.images')}</div>\r\n              <div className=\"movie-images_list\">\r\n                {imagesStatus === 'loading' && <Spinner/>}\r\n                {\r\n                  movieImages.map((el, i) => \r\n                    <img src={el.file_path ? `${img_300}${el.file_path}` : notfound_300} alt={'frame from movie'} key={i}/>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"movie-reccomend\">{t('movie.recommend')}</div>\r\n          <ErrorBoundary>\r\n            {recommendStatus === 'loading' && <Spinner/>}\r\n            <MovieList data={movieRecommend}/>\r\n          </ErrorBoundary>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const spinner = movieStatus === 'loading' ? <Spinner/> : null;\r\n  const content = movieStatus === 'resolved' ? <PageContent/> : null;\r\n\r\n  return (\r\n    <>\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoviePage;","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchMovie, fetchMovieImages, fetchMovieCast, fetchMovieRecommend, toggleCastList } from '../../../redux/movieSlice';\r\nimport { useLang } from '../../../services/use-lang';\r\n\r\nexport const useMoviePage = (id) => {\r\n  const dispatch = useDispatch();\r\n  const {lang} = useLang();\r\n  const {movieStatus, imagesStatus, castStatus, recommendStatus} = useSelector(state => state.movieReducer);\r\n  const movieData = useSelector(state => state.movieReducer.movieData);\r\n  const isShortListCast = useSelector(state => state.movieReducer.isShortListCast);\r\n  const shortListCast = useSelector(state => state.movieReducer.shortListCast);\r\n  const movieCast = useSelector(state => state.movieReducer.movieCast);\r\n  const movieImages = useSelector(state => state.movieReducer.movieImages);\r\n  const movieRecommend = useSelector(state => state.movieReducer.movieRecommend);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovie({id, lang}));\r\n    dispatch(fetchMovieImages({id}));\r\n    dispatch(fetchMovieCast({id, lang}));\r\n    dispatch(fetchMovieRecommend({id, lang}));\r\n  }, [dispatch, id, lang]);\r\n\r\n  const togglelCastItems = () => {\r\n    dispatch(toggleCastList());\r\n  }\r\n\r\n  return {movieStatus, imagesStatus, castStatus, recommendStatus, movieData,isShortListCast, shortListCast, movieCast, movieImages, movieRecommend, togglelCastItems};\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { httpService, _apiBase, _apiKey } from '../services/http-service';\r\n\r\nexport const fetchSearchMovies = createAsyncThunk(\r\n  'search/fetchSearchMovies',\r\n  ({lang, query, page}) => {\r\n    const {request} = httpService();\r\n    return request(`${_apiBase}search/movie?${_apiKey}&language=${lang}&query=${query}&page=${page}&include_adult=false`);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  searchMovies: [],\r\n  totalPages: 10,\r\n  status: null,\r\n  error: null\r\n};\r\n\r\nconst searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchSearchMovies.pending]: (state) => {\r\n      state.status = 'loading';\r\n      state.error = null;\r\n    },\r\n    [fetchSearchMovies.fulfilled]: (state, action) => {\r\n      state.status = 'resolved';\r\n      state.searchMovies = action.payload.results;\r\n      state.totalPages = action.payload.total_pages;\r\n    },\r\n    [fetchSearchMovies.rejected]: (state, action) => {\r\n      state.status = 'rejected';\r\n      state.error = action.payload;\r\n    },\r\n  }\r\n});\r\n\r\nconst {reducer} = searchSlice;\r\nexport default reducer;","import BasicPagination from '../../pagination/pagination';\r\nimport MovieList from '../../movie-list/movie-list';\r\nimport ErrorBoundary from '../../error-boundary/error-boundary';\r\nimport Spinner from '../../spinner/spinner';\r\nimport { useSearchPage } from './use-search-page';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport './search-page.scss';\r\n\r\nconst SearchPage = () => {\r\n  let [searchParams] = useSearchParams();\r\n  let queryText = searchParams.get(\"query\");\r\n  let queryPage = searchParams.get(\"page\");\r\n\r\n  const {status, totalPages, movies, genresStatus} = useSearchPage(queryText, queryPage);\r\n  const { t } = useTranslation();\r\n  \r\n  return (\r\n    <>\r\n      <h2 className=\"search-results\">\r\n        {movies.length ? `${t('searchResl')}: «${queryText}»` : `NO RESULTS FOUND: «${queryText}»`}\r\n      </h2>\r\n      {status === 'loading' && <Spinner/>}\r\n      <ErrorBoundary>\r\n        {genresStatus === 'loading' ? <Spinner/> : <MovieList data={movies}/>}\r\n      </ErrorBoundary>\r\n      <BasicPagination actualPage={queryPage} query={queryText} countPages={totalPages}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchPage;","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchSearchMovies } from \"../../../redux/searchSlice\";\r\nimport { useLang } from \"../../../services/use-lang\";\r\n\r\nexport const useSearchPage = (query, page) => {\r\n  const dispatch = useDispatch();\r\n  const {lang} = useLang();\r\n  const { status } = useSelector(state => state.searchReducer);\r\n  const movies = useSelector(state => state.searchReducer.searchMovies);\r\n  const totalPages = useSelector(state => state.searchReducer.totalPages);\r\n  const genresStatus = useSelector(state => state.appReducer.genresStatus);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSearchMovies({lang, query, page}))\r\n  }, [dispatch, query, lang, page]);\r\n\r\n  return {status, totalPages, movies, genresStatus};\r\n}","export default __webpack_public_path__ + \"static/media/404.76d89457.png\";","import {Button, ThemeProvider} from '@mui/material';\r\nimport DarkTheme from '../../mui-theme/dark-theme';\r\nimport { Link } from 'react-router-dom';\r\nimport img404 from './404.png';\r\nimport './404.scss';\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div className=\"page404\">\r\n      <h1>Oh... sorry, page not found</h1>\r\n      <img src={img404} alt=\"page 404\"/>\r\n      <ThemeProvider theme={DarkTheme}>\r\n        <Button variant=\"outlined\" size='large' component={Link} to=\"/\">Go home</Button>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page404;\r\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport { Container } from '@mui/material';\r\nimport Header from '../header/header';\r\nimport PopularMovies from '../pages/popular-movies/popular-movies';\r\nimport TopRatedMovies from '../pages/toprated-movies/toprated-movies';\r\nimport UpcomingMovies from '../pages/upcoming-movies/upcoming-movies';\r\nimport ActorPage from '../pages/actor-page/actor-page';\r\nimport MoviePage from '../pages/movie-page/movie-page';\r\nimport SearchPage from '../pages/search-page/search-page';\r\nimport Page404 from \"../pages/404/404\";\r\nimport './app.scss';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Header/>\r\n        <Container maxWidth=\"xl\">\r\n          <Routes>\r\n            <Route path=\"/\" element={ <PopularMovies /> }/>\r\n            <Route path=\"/toprated\" element={ <TopRatedMovies /> }/>\r\n            <Route path=\"/upcoming\" element={ <UpcomingMovies /> }/>\r\n            <Route path=\"/search\" element={ <SearchPage/> }/>\r\n            <Route path=\"actor/:actorId\" element={ <ActorPage/> }/>\r\n            <Route path=\"movie/:movieId\" element={ <MoviePage/> }/>\r\n            <Route path=\"*\" element={ <Page404/> }/>\r\n          </Routes>\r\n        </Container>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from './appSlice';\r\nimport popularReducer from './popularMoviesSlice';\r\nimport topReducer from './topMoviesSlice';\r\nimport upcomingReducer from './upcomingMoviesSlice';\r\nimport searchReducer from './searchSlice';\r\nimport actorReducer from './actorSlice';\r\nimport movieReducer from './movieSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    appReducer, \r\n    popularReducer,\r\n    topReducer, \r\n    upcomingReducer,\r\n    searchReducer,\r\n    actorReducer,\r\n    movieReducer\r\n  },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware(),\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/store';\r\nimport {Provider} from 'react-redux';\r\nimport './i18n/i18n';\r\n\r\nReactDOM.render(\r\n  <Suspense fallback={<div>Loading...</div>}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Suspense>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}